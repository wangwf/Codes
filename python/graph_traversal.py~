'''
'''


'''Depth First Traversal
start at node n
mark n as visited
for
'''
def DFS_nodes(graph, node, visited=[]):
    visited.append(node)
    for neighbor in graph[node]:
        if neighbor not in visited:
            DFS(graph, neighbor, visited)
    return visited


def DFS_edges(graph, node, visited=[], edgs=[]):
    visited.append(node)
    for neighbor in graph[node]:
        if neighbor not in visited:
            edgs.append([node, neighbor])
            DFS_edgs(graph, neighbor, visited, edges)
    return edgs

